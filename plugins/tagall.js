const { cmd } = require("../command");
const config = require("../config");

cmd(
  {
    pattern: "tagall",
    desc: "Tag all group members (Owner only, admin not required)",
    category: "group",
    filename: __filename,
  },
  async (robin, mek, m, { from, isGroup, reply }) => {
    try {
      if (!isGroup) return reply("‚ùå ‡∂∏‡∑ö command ‡∂ë‡∂ö group ‡∂ë‡∂ö‡∂ö‡∂ß ‡∂¥‡∂∏‡∂´‡∂∫‡∑í.");

      // Owner check
      const senderNumber = mek.key.fromMe
        ? robin.user.id.split(":")[0]
        : mek.key.participant || mek.key.remoteJid;
      const isOwner = Array.isArray(config.OWNER_NUM)
        ? config.OWNER_NUM.includes(senderNumber.split("@")[0])
        : senderNumber.split("@")[0] === config.OWNER_NUM;

      if (!isOwner) return reply("‚ùå ‡∂∏‡∑ö command ‡∂ë‡∂ö owner ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä.");

      // Fetch group metadata dynamically
      const groupMetadata = await robin.groupMetadata(from);
      if (!groupMetadata || !groupMetadata.participants || groupMetadata.participants.length === 0)
        return reply("‚ùå Group ‡∂ë‡∂ö‡∑ö members ‡∂ö‡∑í‡∑É‡∑í‡∑Ä‡∂ö‡∑ä ‡∂±‡∑ê‡∑Ñ‡∑ê.");

      // Mentions list
      const mentions = groupMetadata.participants.map(p => p.id);

      // Prepare text
      let text = "üì£ ‡∂î‡∂ö‡∑ä‡∂ö‡∑ú‡∂∏ members tag ‡∂ö‡∂ª‡∂±‡∑ä‡∂±\n\n";
      mentions.forEach(id => { text += `@${id.split("@")[0]} `; });

      // Send message with mentions (works even if bot is not admin)
      await robin.sendMessage(from, { text, mentions }, { quoted: mek });

    } catch (e) {
      console.error("‚ùå Tag all failed:", e);
      reply("‚ùå ‡∂î‡∂ö‡∑ä‡∂ö‡∑ú‡∂∏ members tag ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂∂‡∑ê‡∂ª‡∑í ‡∑Ä‡∑î‡∂´‡∑è.");
    }
  }
);
